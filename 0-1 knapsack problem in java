import java.util.*;
public class _0_1_knapsack {
	public static int max(int a,int b){return a>b?a:b;}
	public static int knapsack(int st,int n,int s,int dp[][], int[] val,int[] weight){
		if (st>=n)
			return 0;
		if(dp[st][s]!=0)
			return dp[st][s];
		if(val[st]>s)
			dp[st][s]=knapsack(st+1,n,s,dp,val,weight);
		else 
			dp[st][s]=max(weight[st]+knapsack(st+1,n,s-val[st],dp,val,weight),knapsack(st+1,n,s,dp,val,weight));
		return dp[st][s];
	}
    public static void main(String args[]) {
        Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int s=sc.nextInt();
		int[][] dp=new int[n][s+1];
		int[] val=new int[n];
		int[] weight=new int[n];
		for(int i=0 ; i<n ; i++)
			val[i]=sc.nextInt();
		for(int i=0 ; i<n ; i++)
			weight[i]=sc.nextInt();
		int ans=knapsack(0,n,s,dp,val,weight);
		System.out.println(ans);
    }
}
